name: Deploy Documentation (Alternative)

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  docs:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: poetry install --with docs

    - name: Build documentation
      run: |
        cd docs
        poetry run sphinx-build -b html source build/html
        touch build/html/.nojekyll

    - name: Setup Git Config and Remote
      if: github.ref == 'refs/heads/main'
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        # Check if origin exists before removing
        if git remote | grep -q origin; then
          git remote rm origin
        fi
        git remote add origin https://github.com/${{ github.repository }}.git

    - name: Clear remote gh-pages branch
      if: github.ref == 'refs/heads/main'
      run: |
        git push origin --delete gh-pages || echo "gh-pages branch does not exist, continuing..."

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/build/html
        publish_branch: gh-pages
        force_orphan: true
        enable_jekyll: false
        allow_empty_commit: false
        keep_files: false
        exclude_assets: '.github'

    - name: Verify Push Success
      if: github.ref == 'refs/heads/main'
      run: |
        echo "Verifying gh-pages branch deployment..."
        git ls-remote --heads https://github.com/${{ github.repository }} gh-pages || echo "gh-pages branch may still be creating..."
