[build-system]
requires = ["poetry-core>=1.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "warifuri"
version = "0.1.0"
description = "A powerful CLI tool for task-driven workflow automation with dependency resolution, GitHub integration, and multi-format output support"
authors = ["warifuri team <contact@warifuri.dev>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/f43a9a/warifuri"
repository = "https://github.com/f43a9a/warifuri"
documentation = "https://warifuri.readthedocs.io/"
keywords = ["cli", "automation", "workflow", "task-management", "dependency-resolution"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
packages = [{ include = "warifuri", from = "src" }]

[tool.poetry.scripts]
warifuri = "warifuri.cli.main:cli"

[tool.poetry.dependencies]
python = "^3.11"
PyYAML = ">=6.0"
gitpython = ">=3.1.0"
requests = ">=2.28.0"
click = ">=8.0.0"
jsonschema = ">=4.0.0"

[tool.poetry.group.dev.dependencies]
mypy = "*"
types-jsonschema = "*"
ruff = "*"
pytest = "*"
pytest-cov = "*"
types-pyyaml = "^6.0.12.20250516"
sphinx = "^8.2.3"
sphinx-autodoc-typehints = "^3.2.0"
sphinx-rtd-theme = "^3.0.2"

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = false
strict_equality = true
exclude = [
  "tests/.*",
  "scripts/.*",
  ".*_test\\.py$",
]

[[tool.mypy.overrides]]
module = ["git.*", "flask.*", "requests.*", "pytest.*"]
ignore_missing_imports = true

[tool.ruff]
target-version = "py311"
line-length = 100
exclude = [".git", "__pycache__", "build", "dist"]

[tool.ruff.lint]
select = ["F", "B", "E", "W"]
ignore = ["E203", "E501", "C901"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
