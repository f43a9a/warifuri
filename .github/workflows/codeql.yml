# GitHub CodeQL security analysis workflow
# Performs static analysis to find security vulnerabilities

name: "CodeQL Security Analysis"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run CodeQL analysis every Monday at 6:00 UTC
    - cron: '0 6 * * 1'
  workflow_dispatch:

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  analyze:
    name: CodeQL Analysis
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        # Override default queries with security-focused queries
        queries: security-extended,security-and-quality

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache Poetry installation
      uses: actions/cache@v3
      with:
        path: ~/.local
        key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-codeql-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          venv-codeql-${{ runner.os }}-

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: |
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project true
        poetry install --no-interaction --no-root --only=main

    - name: Install warifuri
      run: poetry install --no-interaction --only=main

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
        # Upload results to GitHub Security tab
        upload: true
        # Configure CodeQL to handle Python properly
        output: "/tmp/codeql-results"
        upload-pack: true

    - name: Upload CodeQL results as artifact
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: codeql-results-${{ matrix.language }}
        path: |
          /tmp/codeql-results/
          ${{ runner.temp }}/codeql_databases/
        retention-days: 30
        include-hidden-files: true
